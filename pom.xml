<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.3</version>
    <relativePath/>
  </parent>
  <groupId>com.manuelr</groupId>
  <artifactId>bank-api</artifactId>
  <version>${project.version}</version>
  <name>bank-api</name>
  <description>bank-api</description>
  <properties>
    <project.version>1.8.3-local-cert</project.version>
    <java.version>17</java.version>
    <guava.version>33.0.0-jre</guava.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>json-smart</artifactId>
    </dependency>
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>3.4.1</version>
        <configuration>
          <from>
            <image>amazoncorretto:17-alpine-jdk</image>
            <auth>
              <username>${DOCKER_USERNAME}</username>
              <password>${DOCKER_PASSWORD}</password>
            </auth>
          </from>
          <to>
            <!--suppress UnresolvedMavenProperty -->
            <image>${DOCKER_REPOSITORY}:${project.version}</image>
            <auth>
              <!--suppress UnresolvedMavenProperty -->
              <username>${DOCKER_USERNAME}</username>
              <!--suppress UnresolvedMavenProperty -->
              <password>${DOCKER_PASSWORD}</password>
            </auth>
          </to>
          <container>
            <entrypoint>/entrypoint.sh</entrypoint>
            <ports>
              <port>8080</port>
            </ports>
          </container>
          <extraDirectories>
            <permissions>
              <permission>
                <file>/mongoCA.crt</file>
                <mode>755</mode>
              </permission>
              <permission>
                <file>/entrypoint.sh</file>
                <mode>755</mode>
              </permission>
            </permissions>
          </extraDirectories>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
